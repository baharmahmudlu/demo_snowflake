# CREATE
create database DB_NAME;
create schema SCHEMA_NAME;
create role ROLE_NAME;

# USE
use database DB_NAME;
use schema SCHEMA_NAME;
use role ROLE_NAME;

# DROP
drop database DB_NAME;
drop schema SCHEMA_NAME;
drop role ROLE_NAME;

# SHOW
show schemas;
show tables;
show schemas in account;
show tables in account;

# CREATE TABLE
create or replace table TABLE_NAME (
    COL1 data_type,
    COL2 data_type,
);

# CREATE TABLE WITH AUTOINCREMENT to generate a UID for each new row
create or replace table TABLE_NAME
( ID number autoincrement
 , COL2 varchar(50)
 , COL3 number(4,0)
);

# INSERT INTO TABLE
insert into TABLE_NAME values (VAL1, VAL2);

# UPDATE VALUE IN TABLE
update TABLE_NAME set COL = VAL where CONDITION

# REMOVE ROW FROM TABLE
delete from TABLE_NAME
where CONDITION;

# CLEAN WHOLE TABLE
truncate table TABLE_NAME;


# CREATE FILE FORMAT TO STORE DATA FROM STAGE
create file format DB_NAME.SCHEMA_NAME.FILE_FORMAT_NAME 
    type = 'CSV'  # csv is used for any flat file (tsv, pipe-separated, etc)
    field_delimiter = '|'  # pipes as column separators
    skip_header = 1  # one header row to skip
    ;

create file format DB_NAME.SCHEMA_NAME.FILE_FORMAT_NAME 
    type = 'CSV'  # csv for comma separated files
    field_delimiter = ','  # commas as column separators
    skip_header = 1 --one header row  
    FIELD_OPTIONALLY_ENCLOSED_BY = '"'  # this means that some values will be wrapped in double-quotes bc they have commas in them
    ;

create file format DB_NAME.SCHEMA_NAME.FILE_FORMAT_NAME
    type = 'CSV'
    field_delimiter = '\t'  # tab as column separators
    skip_header = 1
    ;

//Create File Format for JSON Data 
create or replace file format DB_NAME.SCHEMA_NAME.FILE_FORMAT_NAME
type = 'JSON' 
compression = 'AUTO' 
strip_outer_array = TRUE; 

# SELECT FROM STAGE DIRECTLY
# before selecting we need to add file to stage (database -> schema -> create btn -> stage btn -> snowflake managed btn -> upload)
select $1, $2, $3
from @DB_NAME.SCHEMA_NAME.STAGE_NAME/FILE_NAME
(file_format => FILE_FORMAT_NAME_PATH );

# COPY INTO TABLE FROM STAGE 
copy into TABLE_NAME
from @FILE_FORMAT_PATH
files = ( 'STAGE_FILE_NAME' )
file_format = ( format_name=FILE_FORMAT_NAME_PATH );

# SEQUENCE 
# we can create a sequence as a unique identifier to use when we insert into a table
create or replace sequence DB_NAME.SCHEMA_NAME.SEQUENCE_NAME
start = START_NUMBER 
increment = INCREMENT_NUMBER
order
comment = 'YOUR_COMMENT_HERE';

// sample to use
insert into TABLE_NAME(ID_COL,COL2, COL3) 
values
(seq_author_uid.nextval, 'Laura', 'K')
,(seq_author_uid.nextval, 'Jan', '')
,(seq_author_uid.nextval, 'Jennifer', '')
,(seq_author_uid.nextval, 'Kathleen', '');



